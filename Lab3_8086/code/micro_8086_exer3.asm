EXIT MACRO ; macro exits back to DOS
MOV AX,4C00H
INT 21H
ENDM

PRINT MACRO CHAR ; tupwma xarakthra
PUSH DX
PUSH AX
MOV DL,CHAR
MOV AH,2
INT 21H
POP AX
POP DX
ENDM

READ MACRO ; diabasma apo to plhktrolgio
MOV AH,8
INT 21H
ENDM

PRINT_STRING MACRO STRING ; typwma oloklhrou string 
PUSH DX
PUSH AX
LEA DX,STRING
MOV AH,09H
INT 21H
POP AX
POP DX
ENDM
STACK_SEG SEGMENT STACK
DB 50 DUP(?) ; 50 bytes for stack
STACK_SEG ENDS
DATA_SEG SEGMENT
INPUT DB 15 DUP(?)
;NUMS DB 15 DUP(?)
NEWLINE DB 0AH,0DH,'$'
DATA_SEG ENDS
CODE_SEG SEGMENT
ASSUME CS:CODE_SEG,DS:DATA_SEG,SS:STACK_SEG

MAIN PROC FAR
MOV AX,DATA_SEG
MOV DS,AX ;DS <- DATA_SEG
MOV AX,STACK_SEG
MOV SS,AX ;SS <- STACK_SEG
JMP START
TERMINATE:
EXIT

START:
MOV CX,14D  ;metrhths xarakthrwn 
LEA BX,INPUT
;LEA DX,NUMS
MOV AH,0D 

READNUM:
READ
CMP AL,'='
JE TERMINATE
CMP AL,' '
JNE CHECK_ENTER
PRINT ' '
JMP READ_NEXT2 

CHECK_ENTER:
CMP AL,0DH
JNE CHECK_DIGIT
JMP NEXT  

CHECK_DIGIT:
CMP AL,'0'
JL READNUM
CMP AL,'9'
JG CHECK_CAPITAL
PRINT AL
MOV BYTE PTR[BX],AL
JMP READ_NEXT

CHECK_CAPITAL:
CMP AL,'A'
JL READNUM
CMP AL,'Z'
JG CHECK_SMALL
PRINT AL
MOV BYTE PTR[BX],AL
JMP READ_NEXT

CHECK_SMALL:
CMP AL,'a'
JL READNUM
CMP AL,'z'
JG READNUM
PRINT AL
MOV BYTE PTR[BX],AL  

READ_NEXT:
INC BX
READ_NEXT2:
LOOP READNUM

WAIT_ENTER:
READ
CMP AL,0DH
JNE WAIT_ENTER

NEXT:
MOV BYTE PTR[BX],0DH
PRINT_STRING NEWLINE
MOV CH,'a'
MOV CL,'z'
LEA BX,INPUT
CALL PRINTSOME
PRINT ' '
MOV CH,'0'
MOV CL,'9'
LEA BX,INPUT
CALL PRINTSOME
PRINT ' '
MOV CH,'A'
MOV CL,'Z'
LEA BX,INPUT
CALL PRINTSOME   


PRINT_STRING NEWLINE  


MOV CH,'0'
MOV CL,'9'
LEA BX,INPUT
CALL FINDMAX 

PRINT_STRING NEWLINE

JMP START 


FINDMAX PROC NEAR 
    
REPEAT3232:
MOV DL,0D
MOV DH,0D
REPEAT1:
MOV AL,[BX]
CMP AL,0DH
JE EXITP1
CMP AL,CH
JL OTHER1
CMP AL,CL
JG OTHER1
CMP AL,DL
JG  RENEW
CMP AL,DL
JE RENEW
CMP AL,DH
JG RENEWDH
OTHER1:
INC BX
JMP REPEAT1

RENEWDH:
MOV DH,AL
JMP OTHER1
         
RENEW:
MOV DH,DL
MOV DL,AL
JMP OTHER1

EXITP1:
PRINT DL
PRINT DH
RET
ENDP 





PRINTSOME PROC NEAR 
    
REPEAT:
MOV AL,[BX]
CMP AL,0DH
JE EXITP
CMP AL,CH
JL OTHER
CMP AL,CL
JG OTHER
PRINT AL
OTHER:
INC BX
JMP REPEAT

EXITP:
RET
ENDP 

CODE_SEG ENDS
END MAIN