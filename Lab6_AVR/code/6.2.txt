 .include "m16def.inc"
 .def cnt1=r19
 .def again_cnt=r18
 .def pins_cnt=r17
 .def check=r22
 .def interr=r20
 .def max=r21
 .def temp=r16
 .def outreg=r28
 
 ;;;orismos dieuthunseon gia reset kai interrupt INT1;;;;;
 .org 0x0
 jmp reset
 .org 0x2
 jmp interr0
 ;reti

 reset:
		ldi temp,high(ramend)						;arxikopoihsh g stack
		out sph,temp
		ldi temp,low(ramend)
		out spl,temp
;;;;orismos eisodon kai eksodon;;;;
		ser temp
		out DDRB,temp								;B eksodos tou counter ts main
		out DDRC,temp								;C eksodos tou counter ton pins
		clr temp									;D eisodos gia metrhsh posa pins einai set
		out DDRD,temp
;;;; CNT1----> METRHSH MAIN, PINS_CNT----> METRHSH PINS STHN INTERR;;;;

		clr cnt1									;arxikopoihseis metrhton cnt1,pins_cnt
		clr pins_cnt								;cnt1--> metrhsh main, pins_cnt-->metrhsh on pins
		out portc,pins_cnt							;apeikonish metrhsh interr
		ser max										;arxikopoihsh max--sugrish an exo ftasei st metrhsh 255 O cnt1
		ldi pins_cnt,0								;arxikopoihsh metrhth set pins

		ldi r24,low(200)							;orismos kathusterhshs gia thn metrhsh ths main
		ldi r25,high(200)

		ldi interr,( 1 << ISC00) | ( 1 << ISC01)	;orismos stoixeion gia diakoph--- int0 sthn anerxomenh akmh
		out MCUCR , interr 
		ldi interr ,( 1 << INT0) 
		out GICR , interr
		sei											;energopoihsh diakopon
;;;;METRHSH MAIN;;;;
cont:		
		out portb,cnt1								;enarksh metrhshs--- ola ta led svhsta
		ldi r24,low(200)							;orismos kathusterhshs gia thn metrhsh ths main
		ldi r25,high(200)
		rcall wait_msec								
		inc cnt1									;aukshsh metrhth metrhshs g na deikso epomenh timh
		cp cnt1,max							;an eftase h metrhsh st 255 mhdenise prota kai meta continue, an oxi continue amesos
		brne cont
		out portb,cnt1								;enarksh metrhshs--- ola ta led svhsta
		ldi r24,low(200)							;orismos kathusterhshs gia thn metrhsh ths main
		ldi r25,high(200)
		rcall wait_msec
		clr cnt1
		rjmp cont

;;;;DIAKOPH;;;;;
interr0:
		push r24									;sozo r24, r25 logo allaghs timon sthn klhsh ths kathusterhshs
		push r25

;;; to check_again einai elegxos gia spinthhrismous;;;
check_again:
		ldi r24,(1<<INTF0)
		out GIFR,r24
		push r24
		push r25
		ldi r24,low(5)							;orismos kathusterhshs
		ldi r25,high(5)
		rcall wait_msec
		pop r25
		pop r24
		in r24,GIFR
		sbrc r24,6 ;sbrc r24,7

		;push r24
		;andi r24,64 ;check an to bit 6 einai akomh 1
		;cpi r24,0
		;pop r24
		;brne repeat


		rjmp check_again
;;;telos elegxou spinthhrismon;;;;;;;;;;;;;;;;;

		in check,pina								;diavazo eisodo a gia na metrhsh pins
		clr again_cnt								;arxikopoihsh metrhth gia 8 epanalhpseis---8 leds gia elegxo
		clr pins_cnt
again:
		sbrc check,7								;an to msb einai 0 skip thn aukshsh tou pins_cnt
		inc pins_cnt								;an msb=1 aukshse pins_cnt
		lsl check									;olisthhsh gia ton elegxo tou epomenou bit
		inc again_cnt								;aukshsh metrhth epanalhpseon
		cpi again_cnt,8							;an elegksa ola ta bit vgaino, allios again
		brne again
		
;trexw gia pins_cnt fores kai vazw tosous asous ap ta deksia pros ta aristera ston outreg
		ldi outreg,0
		cpi pins_cnt,0
		breq zero
execute:
		lsl outreg
	;	ori outreg,1
		adiw outreg,1
		dec pins_cnt
		cpi pins_cnt,0
		brne execute

zero:
		out PORTC,outreg					;meta thn oloklhrosh tou elegxou olon ton bit emfanizo thn timh tou outreg sthn thura C.

return:
		pop r25									;epanafora timon r24,r25 pou ekana push gia ton elegxo spinthhrismon.
		pop r24
		reti										;return interrupt


wait_usec:
		sbiw r24 ,1									; 2 κύκλοι (0.250 μsec)
		nop											; 1 κύκλος (0.125 μsec)
		nop											; 1 κύκλος (0.125 μsec)
		nop											; 1 κύκλος (0.125 μsec)
		nop											; 1 κύκλος (0.125 μsec)
		brne wait_usec								; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
		ret											; 4 κύκλοι (0.500 μsec)

wait_msec:
		push r24									; 2 κύκλοι (0.250 μsec)
		push r25									; 2 κύκλοι
		ldi r24 , low(998)							; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
		ldi r25 , high(998)							; 1 κύκλος (0.125 μsec)
		rcall wait_usec								; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
		pop r25										; 2 κύκλοι (0.250 μsec)
		pop r24										; 2 κύκλοι
		sbiw r24 , 1								; 2 κύκλοι
		brne wait_msec								; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
		ret											; 4 κύκλοι (0.500 μsec)
