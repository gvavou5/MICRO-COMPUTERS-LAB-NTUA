INCLUDE 'macros.txt'
INCLUDE 'lib.inc'                                

DATA_SEG SEGMENT
	X1 DW ?                 ;STO X1 THA APOTHIKEYW TON 1st OP
	X2 DW ?                 ;STO X2 THA APOTHUKEYW TON 2nd OP
	X3 DB ?                 ;STO X3 THA APOTHIKEYW TO PROSHMO
	NEWLINE DB 0AH,0DH,'$'  
DATA_SEG ENDS

STACK_SEG SEGMENT STACK
	DB 50 DUP(?)			;50 bytes for stack
STACK_SEG ENDS


CODE_SEG SEGMENT BYTE
	ASSUME CS:CODE_SEG,DS:DATA_SEG,SS:STACK_SEG

DEFINE_CREATE_HEX
DEFINE_PRINT_DEC
DEFINE_READ_HEX
DEFINE_PRINT_HEX1
DEFINE_PRINT_HEX   
DEFINE_PRINT32

	
MAIN PROC FAR
	MOV AX,DATA_SEG
	MOV DS,AX				;DS <- DATA_SEG
	MOV AX,STACK_SEG
	MOV SS,AX				;SS <- STACK_SEG
	JMP START

TERMINATE:
	EXIT
	
PUSH_SYMBOL:
	PRINT AL                ;PRINT TO SYMBOL
	MOV X3,AL               ;X3=SYMBOL
	JMP SECOND              ;PHGAINE NA DIAVASEIS TON 2nd OP

START: 
	MOV CX,3                ;KATHE ARITHMOS EXEI EWS 3 DIGITS
	MOV BX,0
L1:
	READ                    
	CMP AL,'Q'              ;AN PATHSW Q TOTE TERMINATE
	JE TERMINATE
	CMP AL,2BH	            ;CODE '+'       
	JE PUSH_SYMBOL
	CMP AL,2DH	            ;CODE '-'
	JE PUSH_SYMBOL
	CALL READ_HEX           ;DIAVASE ENA HEX DIGIT
	LOOP L1                 ;LOOPARE EWS 3 FORES
	
IGN:                        ;AN PATHSW PANW APO 3 DIGITS TOTE AGNOHSE
	READ
	CMP AL,'Q'
	JE TERMINATE
	CMP AL,2BH	            ; '+'
	JE PUSH_SYMBOL
	CMP AL,2DH	            ; '-'
	JE PUSH_SYMBOL
	JMP IGN
	
SECOND:                     ;DIAVASMA 2nd OP
	MOV X1,BX               ;X1 = 1st OP (HEX)
	MOV CX,3                ;OMOIWS GIA TON 2nd OP
	MOV BX,0
L2:
	READ
	CMP AL,'Q'
	JE TERMINATE
	CMP AL,'='
	JE FINISH
	CALL READ_HEX
	LOOP L2

IGN2:
	READ
	CMP AL,'Q'
	JE TERMINATE
	CMP AL,'='
	JE FINISH
	JMP IGN2
	
FINISH:
	MOV X2,BX	            ;X2 = 2nd OP(HEX)	   
	CMP X3,'+'
	JE ADDNUM
	CMP X3,'-'
	JE SUBNUM
	EXIT

ADDNUM:
   PRINT '='
   MOV DX,X1
   ADD DX,X2                ;DX = X1+X2
   CALL PRINT32             ;PRINT TO SUM(HEX)
   PRINT '='
   CALL PRINT_DEC           ;PRINT TO SUM(DEC)
   PRINT_STRING NEWLINE
   JMP START                ;SUNEXHS LEITOURGEIA

SUBNUM:
   PRINT '='
   MOV DX,X1
   CMP DX,X2                
   JL NEGATIVE              ;AN X1<X2 TOTE VGALE ENA '-' KAI KANE X2-X1
   SUB DX,X2	            ;DX=X1-X2
   CALL PRINT32             ;PRINT SE HEX
   PRINT '='
   CALL PRINT_DEC           ;PRINT SE DEC
   PRINT_STRING NEWLINE
   JMP START
   
NEGATIVE:
	PRINT '-'
	MOV DX,X2
	SUB DX,X1
	CALL PRINT32
	PRINT '='
	PRINT '-'
	CALL PRINT_DEC
	PRINT_STRING NEWLINE
	JMP START
MAIN ENDP 
 
CODE_SEG ENDS
	END MAIN